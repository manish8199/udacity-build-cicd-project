name: Frontend Continuous Integration 

env:
  # Set Node.js Version
  REACT_APP_MOVIE_API_URL: 'REACT_APP_MOVIE_API_URL'

on:
  workflow_dispatch:

  pull_request:
    branches:
      - main

jobs:
  lintjob:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7
            

    - name: setup node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: "./starter/frontend/package-lock.json"

    - name: install depedencies
      run: cd ./starter/frontend && npm ci

    - name: run lint
      run: cd ./starter/frontend && npm run lint

    - name: print message
      run: echo "lint build is running"

  testjob:
    runs-on: ubuntu-latest

    steps:
    - name: checkout code
      uses: actions/checkout@v4.1.7

    - name: setup node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: "./starter/frontend/package-lock.json"

    - name: install depedencies
      run: cd ./starter/frontend &&  npm ci

    - name: run tests
      run: cd ./starter/frontend && npm run test

    - name: print message
      run: echo "test build is running"

  buildjob:
    runs-on: ubuntu-latest
    needs: [lintjob, testjob]


    steps:
    - name: checkout code
      uses: actions/checkout@v4.1.7

    - name: setup node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'
        cache-dependency-path: "./starter/frontend/package-lock.json"

    - name: install depedencies
      run: cd ./starter/frontend && npm ci

    - name: run tests
      run:  cd ./starter/frontend && npm run test

    - name: Build Docker image
      run: |
          cd ./starter/frontend &&  docker build -t docker-image .

    - name: print message
      run: echo "test build is running"

